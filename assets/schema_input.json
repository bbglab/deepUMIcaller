{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$id": "https://raw.githubusercontent.com/bbglab/deepUMIcaller/master/assets/schema_input.json",
    "title": "bbglab/deepUMIcaller pipeline - params.input schema",
    "description": "Schema for the file provided with params.input",
    "type": "array",
    "items": {
        "type": "object",
        "properties": {
            "sample": {
                "type": "string",
                "pattern": "^\\S+$",
                "errorMessage": "Sample name must be provided and cannot contain spaces"
            },
            "fastq_1": {
                "type": "string",
                "pattern": "^\\S+\\.f(ast)?q\\.gz$",
                "errorMessage": "FastQ file for reads 1 must be provided, cannot contain spaces and must have extension '.fq.gz' or '.fastq.gz'"
            },
            "fastq_2": {
                "type": "string",
                "pattern": "^\\S+\\.f(ast)?q\\.gz$",
                "errorMessage": "FastQ file for reads 2 cannot contain spaces and must have extension '.fq.gz' or '.fastq.gz'"
            },
            "bam": {
                "type": "string",
                "pattern": "^\\S+\\.bam$",
                "errorMessage": "BAM file of duplex reads ready for 'filterconsensus' or 'groupbyumi' steps."
            },
            "duplexbam": {
                "type": "string",
                "pattern": "^\\S+\\.bam$",
                "errorMessage": "BAM file of duplex reads ready for the 'calling' step."
            },
            "csi": {
                "type": "string",
                "pattern": "^\\S+\\.bam.csi$",
                "errorMessage": "BAM index file of duplex reads ready for the 'calling' step."
            },
            "read_structure": {
                "type": "string",
                "pattern": "^.*$",
                "errorMessage": "Read structure must follow fgbio format (e.g., '8M1S+T 8M1S+T'). See: https://github.com/fulcrumgenomics/fgbio/wiki/Read-Structures"
            },
            "parent_dna": {
                "type": "string",
                "pattern": "^\\S+$",
                "errorMessage": "The parent DNA must be provided when two or more samples need to be concatenated. It cannot contain spaces"
            },
        },
        "required": ["sample"],
        "dependentRequired": {
            "fastq_1" : ["fastq_2", "read_structure"],
            "duplexbam" : ["csi"]
        }
    }
}
