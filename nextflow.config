/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    bbglab/deepUMIcaller Nextflow config file
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Default config options for all compute environments
----------------------------------------------------------------------------------------
*/

// Global default params, used in configs
params {

// TODO nf-core: Specify your pipeline's command line flags
    // Input options
    input                      = null
    step                       = 'mapping' // Starts with mapping
    ref_fasta                  = null
    targetsfile                = null


    // Trimming options
    trim_adapters              = false
    three_prime_clip_r1        = 0
    three_prime_clip_r2        = 0
    trim_nextseq               = false

    // Clipping after UMI extraction
    left_clip                  = 10
    right_clip                 = 0


    // References
    genome                     = null
    igenomes_base              = 's3://ngi-igenomes/igenomes'
    igenomes_ignore            = true


    // MultiQC options
    multiqc_config             = null
    multiqc_title              = null
    max_multiqc_email_size     = '25.MB'
    

    // general options
    duplex_high_conf           = false
    duplex_med_conf            = true
    duplex_low_conf            = true
    remove_offtargets          = false
    annotate_mutations         = false
    perform_qcs                = true

    filter_mutations           = true
    filter_human               = true

    low_complex_file     = "/data/bbg/datasets/genomes/GRCh38/masking_bedfiles/hg38_lowcomplexity_repetitive_regions.mutcoords.bed"
    low_mappability_file = "/data/bbg/datasets/genomes/GRCh38/masking_bedfiles/blacklist/GRCh38.encode.blacklist.bed"
    // From here: https://www.nature.com/articles/s41598-019-45839-z#data-availability

    global_exons_file           = '/data/bbg/datasets/prominent/metadata/regions/data/seq_panels/xgen-exome-hyb-panel-v2-targets-hg38.bed'

    asminusxs_thres             = 50

    // run details
    projectname                = "deepUMIcaller_run"


    // fgbio options
    // groupreadsbyumi
    groupreadsbyumi_edits      = 1              // default number of allowable edits for fgbio's GROUPREADSBYUMI
    groupreadsbyumi_min_map_q  = 10             // we had it defined at 10, but we were not using it in the pipeline...,
                                                //      I put it to 1 since it is the default that we were using    

    // callduplexconsensusreads
    call_min_reads_duplex      = "1 1 0"        // default minimum input reads for fgbio's CALLDUPLEXCONSENSUSREADS tool
    call_min_baseq             = 20             // default minimum input base quality for fgbio's CALLDUPLEXCONSENSUSREADS tool


    // filterconsensusreads common high, medium and low
    maxN_prop_per_read         = 0.2                 // reads with higher proportion of Ns will be discarded from the BAM file

    // filterconsensusreads common high and medium
    filter_strand_agreement    = true                // require both strands to agree in determining a base

    // filterconsensusreads high
    filter_min_reads_am           = "2 1 0"        // default minimum input reads for fgbio's FILTERCONSENSUSREADS
    filter_min_baseq_am           = 20             // default base quality below which reads are masked for fgbio's FILTERCONSENSUSREADS
    filter_max_base_error_rate_am = "0.1 0.1 0.1"  // default maximum raw-read error rate for fgbio's FILTERCONSENSUSREADS

    // filterconsensusreads high
    filter_min_reads_high           = "6 3 3"        // default minimum input reads for fgbio's FILTERCONSENSUSREADS
    filter_min_baseq_high           = 30             // default base quality below which reads are masked for fgbio's FILTERCONSENSUSREADS
    filter_max_base_error_rate_high = "0.1 0.1 0.1"  // default maximum raw-read error rate for fgbio's FILTERCONSENSUSREADS

    // filterconsensusreads medium
    filter_min_reads_med           = "4 2 2"        // default minimum input reads for fgbio's FILTERCONSENSUSREADS
    filter_min_baseq_med           = 30             // default base quality below which reads are masked for fgbio's FILTERCONSENSUSREADS
    filter_max_base_error_rate_med = "0.1 0.1 0.1"  // default maximum raw-read error rate for fgbio's FILTERCONSENSUSREADS

    // filterconsensusreads low
    filter_min_reads_low           = "2 1 1"        // default minimum input reads for fgbio's FILTERCONSENSUSREADS
    filter_min_baseq_low           = 20             // default base quality below which reads are masked for fgbio's FILTERCONSENSUSREADS
    filter_max_base_error_rate_low = "0.1 0.1 0.1"  // default maximum raw-read error rate for fgbio's FILTERCONSENSUSREADS

    vardict_params                  = "-f 0.0 -r 1 -m 9999 -P 0 -p -z 1 -o 0.5 -L 100"
    vardict_filter_params           = "-A -E -f 0.0 -p 10 -m 20 -v 1"

    // define final read size 
    final_read_size                 = 142


    // References for Ensembl VEP
    download_cache             = false
    vep_cache                  = "/data/bbg/datasets/vep"
    vep_genome                 = "GRCh38"
    vep_species                = "homo_sapiens"
    vep_cache_version          = 111
    vep_out_format             = "tab"
    vep_params                 = "--no_stats --cache --offline --symbol --protein --canonical"


    // Boilerplate options
    outdir                     = null
    publish_dir_mode           = 'copy'
    email                      = null
    email_on_fail              = null
    plaintext_email            = false
    monochrome_logs            = false
    help                       = false
    validate_params            = false
    show_hidden_params         = false
    schema_ignore_params       = 'genomes'
    enable_conda               = false

    // Config options
    custom_config_version      = 'master'
    custom_config_base         = "https://raw.githubusercontent.com/nf-core/configs/${params.custom_config_version}"
    config_profile_description = null
    config_profile_contact     = null
    config_profile_url         = null
    config_profile_name        = null

    // Max resource options
    // Defaults only, expecting to be overwritten
    max_memory                 = '512.GB'
    max_cpus                   = 56
    max_time                   = '240.h'

}

cleanup = false


// Load base.config by default for all pipelines
includeConfig 'conf/base.config'


// Load nf-core custom profiles from different Institutions
// FIXME
/*
try {
    includeConfig "${params.custom_config_base}/nfcore_custom.config"
} catch (Exception e) {
    System.err.println("WARNING: Could not load nf-core/config profiles: ${params.custom_config_base}/nfcore_custom.config")
}
*/

// Load nf-core/fastquorum custom profiles from different institutions.
// Warning: Uncomment only if a pipeline-specific institutional config already exists on nf-core/configs!
// try {
//   includeConfig "${params.custom_config_base}/pipeline/fastquorum.config"
// } catch (Exception e) {
//   System.err.println("WARNING: Could not load nf-core/config/fastquorum profiles: ${params.custom_config_base}/pipeline/fastquorum.config")
// }


profiles {
    debug {
        dumpHashes             = true
        process.beforeScript   = 'echo $HOSTNAME'
        cleanup = false
    }
    conda {
        conda.enabled          = true
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
        apptainer.enabled      = false
    }
    mamba {
        conda.enabled          = true
        conda.useMamba         = true
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
        apptainer.enabled      = false
    }
    docker {
        docker.enabled         = true
        docker.registry        = 'quay.io'
        docker.userEmulation   = true
        conda.enabled          = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
        apptainer.enabled      = false
    }
    arm {
        docker.runOptions = '-u $(id -u):$(id -g) --platform=linux/amd64'
    }
    singularity {
        singularity.enabled    = true
        singularity.autoMounts = true
        conda.enabled          = false
        docker.enabled         = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
        apptainer.enabled      = false
    }
    podman {
        podman.enabled         = true
        podman.registry        = 'quay.io'
        conda.enabled          = false
        docker.enabled         = false
        singularity.enabled    = false
        shifter.enabled        = false
        charliecloud.enabled   = false
        apptainer.enabled      = false
    }
    shifter {
        shifter.enabled        = true
        conda.enabled          = false
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        charliecloud.enabled   = false
        apptainer.enabled      = false
    }
    charliecloud {
        charliecloud.enabled   = true
        conda.enabled          = false
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        apptainer.enabled      = false
    }
    apptainer {
        apptainer.enabled      = true
        conda.enabled          = false
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
    }
    gitpod {
        executor.name          = 'local'
        executor.cpus          = 16
        executor.memory        = 60.GB
    }
    test      { includeConfig 'conf/test.config'      }
    local     { includeConfig 'conf/local.config'     }
    test_full { includeConfig 'conf/test_full.config' }
    duplexome { includeConfig 'conf/duplexome.config' }
}

// Load igenomes.config if required
if (!params.igenomes_ignore) {
    includeConfig 'conf/igenomes.config'
} else {
    params.genomes = [:]
}

// Export these variables to prevent local Python/R libraries from conflicting with those in the container
// The JULIA depot path has been adjusted to a fixed path `/usr/local/share/julia` that needs to be used for packages in the container.
// See https://apeltzer.github.io/post/03-julia-lang-nextflow/ for details on that. Once we have a common agreement on where to keep Julia packages, this is adjustable.

env {
    PYTHONNOUSERSITE = 1
    R_PROFILE_USER   = "/.Rprofile"
    R_ENVIRON_USER   = "/.Renviron"
    JULIA_DEPOT_PATH = "/usr/local/share/julia"
}

// Capture exit codes from upstream processes when piping
process.shell = ['/bin/bash', '-euo', 'pipefail']

def trace_timestamp = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')
timeline {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_timeline_${trace_timestamp}.html"
}
report {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_report_${trace_timestamp}.html"
}
trace {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_trace_${trace_timestamp}.txt"
}
dag {
    enabled = true
    file    = "${params.outdir}/pipeline_info/pipeline_dag_${trace_timestamp}.html"
    direction = 'LR'
    verbose = false
}


manifest {
    name            = 'bbglab/deepUMIcaller'
    homePage        = 'https://github.com/bbglab/deepUMIcaller'
    description     = 'FASTQ to VCFs with Duplex-seq data'
    mainScript      = 'main.nf'
    nextflowVersion = '!>=24.04.3'
    version         = '1.0dev'
}

// Load modules.config for DSL2 module specific options
includeConfig 'conf/modules.config'